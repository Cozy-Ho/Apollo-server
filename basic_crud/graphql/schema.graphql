type Movie {
  id: String!
  title: String!
  score: Int
  desc: String
  watched: Boolean
  info: Info
}

type Query {
  getMovie(id: String!): Movie
  searchMovie(
    search: SearchMethod
    orderby: SortMethod
    pagination: PaginationMethod # err: [ErrInput]
  ): [Movie]
}

type Mutation {
  createMovie(
    title: String!
    score: Int
    desc: String
    watched: Boolean
    info: InputInfo
  ): Movie!
  updateMovie(
    id: String!
    title: String
    score: Int
    desc: String
    watched: Boolean
    info: InputInfo
  ): Movie!
  removeMovie(id: String!): String
  insertTestDB: Boolean
  deleteAll: Boolean
  setDatabase(flag: Int!): String!
}

type Sub {
  subtitle: String
  lang: String
}
type Dub {
  dubbing: String
  lang: String
}
union Info = Sub | Dub

input InputInfo {
  lang: String
  subtitle: String
  dubbing: String
}

input SortMethod {
  id: Sort
  title: Sort
  desc: Sort
  score: Sort
}

input SearchMethod {
  title: String
  score: Int
  desc: String
  watched: Boolean
  info: InputInfo
  andor: String
}

input PaginationMethod {
  curpage: Int
  perpage: Int
}

enum Sort {
  asc
  desc
}
